{"version":3,"sources":["../source/index.ts","../source/lib/common/index.ts","../source/services/radioService/radio/index.ts","../source/services/radioService/channelTypes.ts","../source/services/radioService/listeners.ts","../source/Loomse.ts","../source/components/Story/index.ts","../source/components/Scene/index.ts","../source/components/Video/index.ts","../source/services/radioService/broadcasters.ts","../source/components/Video/Source.ts","../source/types/VideoSourceTypes.ts","../source/components/Subtitles/index.ts","../source/lib/browser/fetch.ts","../source/services/index.ts","../source/services/pluginRegistryService/index.ts","../source/services/reporterService/index.ts","../source/services/reporterService/SceneReporter/index.ts","../source/services/reporterService/VideoReporter/index.ts","../source/services/scriptedEventService/index.ts","../source/services/eventService/EventQueue/index.ts","../source/services/eventService/index.ts","../source/services/subtitleEventService/index.ts","../source/components/Plugin/index.ts","../source/version.ts"],"sourcesContent":["import 'reflect-metadata';\nimport { container } from 'tsyringe';\n\nimport {\n\tlistenToDirectorPlay,\n\tlistenToDirectorPause,\n\tlistenToDirectorSceneChange,\n\tlistenToDirectorSceneEvent,\n\tlistenToVideoTimeUpdate,\n\tlistenToVideoDurationChanged\n} from './services/radioService/listeners';\nimport Loomse from './Loomse';\n\ntype LoomseType = Loomse;\n\nfunction createStory(root: HTMLElement, json: object): LoomseType {\n\tcontainer.register('root', { useValue: root });\n\tcontainer.register('json', { useValue: json });\n\n\treturn container.resolve(Loomse);\n}\n\nexport {\n\tcreateStory,\n\tLoomseType,\n\tlistenToDirectorPlay,\n\tlistenToDirectorPause,\n\tlistenToDirectorSceneChange,\n\tlistenToDirectorSceneEvent,\n\tlistenToVideoTimeUpdate,\n\tlistenToVideoDurationChanged\n};\n","/**\n * Checks if an object is empty\n */\nexport function isEmptyObject(object: { [key: string]: any }) {\n\tconst keys = Object.keys(object);\n\n\treturn !Boolean(keys.length);\n}\n\n/**\n * Returns a random number between minRange and maxRange\n */\nexport function random(minRange: number, maxRange: number): number {\n\tlet range = maxRange - minRange;\n\n\tif (typeof minRange === 'undefined') {\n\t\tminRange = 0;\n\t}\n\tif (range <= 0) {\n\t\trange = maxRange;\n\t\tminRange = 0;\n\t}\n\n\treturn Math.floor(Math.random() * range) + minRange;\n}\n","import { random } from '../../../lib/common';\n\ntype Channel = string;\ntype ListenerToken = string;\ntype Handler = (...args: any[]) => void;\n\n/**\n * Underlying radio which ties the event mechanism together\n *\n * Each channel can have multiple listeners registered to it\n *\n * Listeners consist of a callback function, which is executed when the channel is broadcasting\n */\nexport class Radio {\n\tprivate registry: {\n\t\t[key: Channel]: {\n\t\t\t[key: ListenerToken]: Handler;\n\t\t};\n\t} = {};\n\n\t/**\n\t * Returns a random sequence of characters to the specified length\n\t */\n\tstatic tokenGenerator(length: number): ListenerToken {\n\t\tconst token = [];\n\n\t\tfor (let i = 0; i < length; i += 1) {\n\t\t\tlet randomNumber;\n\n\t\t\tdo {\n\t\t\t\trandomNumber = random(48, 122);\n\t\t\t} while (\n\t\t\t\t// avoid characters that are not 0-0, a-z, A-Z\n\t\t\t\t(randomNumber > 57 && randomNumber < 65) ||\n\t\t\t\t(randomNumber > 90 && randomNumber < 97)\n\t\t\t);\n\n\t\t\ttoken.push(String.fromCharCode(randomNumber));\n\t\t}\n\n\t\treturn token.join('');\n\t}\n\n\t/**\n\t * Broadcast a message to all listeners on channel\n\t *\n\t * Executes listener handlers\n\t */\n\tbroadcastOnChannel(channel: Channel, signal?: any): void {\n\t\tif (!this.registry[channel]) {\n\t\t\tconsole.warn(`Channel ${channel} has no listeners`);\n\n\t\t\treturn;\n\t\t}\n\n\t\tObject.values(this.registry[channel]).forEach((listener) =>\n\t\t\tlistener(signal)\n\t\t);\n\t}\n\n\t/**\n\t * Register a listener to a channel\n\t *\n\t * Returns a deregister function, which is used to deregister the listener from the radio registry\n\t */\n\tlistenToChannel(\n\t\tchannel: Channel,\n\t\thandler: (...args: any[]) => void\n\t): () => void {\n\t\tconst listenerToken: ListenerToken = Radio.tokenGenerator(32);\n\n\t\tif (!this.registry[channel]) {\n\t\t\tthis.registry[channel] = {};\n\t\t}\n\n\t\tthis.registry[channel][listenerToken] = handler;\n\n\t\treturn () => this.stopListening(listenerToken);\n\t}\n\n\t/**\n\t * Remove a listener from a channel, using the unique listener token\n\t */\n\tstopListening(listenerToken: ListenerToken): void {\n\t\tconst channel = Object.keys(this.registry).filter((channel) => {\n\t\t\tconst tokens = Object.keys(this.registry[channel]);\n\n\t\t\treturn tokens.includes(listenerToken);\n\t\t})[0];\n\n\t\tif (!channel) {\n\t\t\tconsole.warn('Listener token not found');\n\n\t\t\treturn;\n\t\t}\n\n\t\tdelete this.registry[channel][listenerToken];\n\n\t\tif (!Object.keys(this.registry[channel]).length) {\n\t\t\tdelete this.registry[channel];\n\t\t}\n\t}\n}\n\nexport const radio = new Radio();\n","export enum RadioChannel {\n\tDIRECTOR_PLAY = 'director:play',\n\tDIRECTOR_PAUSE = 'director:pause',\n\tDIRECTOR_SCENE_CHANGE = 'director:scenechange',\n\tDIRECTOR_SCENE_EVENT = 'director:sceneevent',\n\tVIDEO_ENDED = 'video:ended',\n\tVIDEO_DURATION_CHANGED = 'video:durationchange',\n\tVIDEO_PAUSED = 'video:paused',\n\tVIDEO_PLAYING = 'video:playing',\n\tVIDEO_SEEKED = 'video:seeked',\n\tVIDEO_SEEKING = 'video:seeking',\n\tVIDEO_TIMEUPDATE = 'video:timeupdate',\n\tSUBTITLE_POST = 'subtitle:post',\n\tSUBTITLE_CLEAR = 'subtitle:clear'\n}\n","import { radio } from './radio';\nimport { RadioChannel } from './channelTypes';\n\nexport type StopListeningFunction = () => void;\n\nexport const listenToDirectorPause = (\n\thandler: () => void\n): StopListeningFunction =>\n\tradio.listenToChannel(RadioChannel.DIRECTOR_PAUSE, handler);\n\nexport const listenToDirectorPlay = (\n\thandler: () => void\n): StopListeningFunction =>\n\tradio.listenToChannel(RadioChannel.DIRECTOR_PLAY, handler);\n\nexport const listenToDirectorSceneChange = (\n\thandler: (sceneId: string) => void\n): StopListeningFunction =>\n\tradio.listenToChannel(RadioChannel.DIRECTOR_SCENE_CHANGE, handler);\n\nexport const listenToDirectorSceneEvent = (\n\thandler: (message: any) => void\n): StopListeningFunction =>\n\tradio.listenToChannel(RadioChannel.DIRECTOR_SCENE_EVENT, handler);\n\nexport const listenToVideoDurationChanged = (\n\thandler: (duration: number) => void\n): StopListeningFunction =>\n\tradio.listenToChannel(RadioChannel.VIDEO_DURATION_CHANGED, handler);\n\nexport const listenToVideoTimeUpdate = (\n\thandler: (time: number) => void\n): StopListeningFunction =>\n\tradio.listenToChannel(RadioChannel.VIDEO_TIMEUPDATE, handler);\n","import { el, mount, unmount } from 'redom';\n\nimport Story from './components/Story';\nimport Scene from './components/Scene';\nimport Plugin, { PluginProps } from './components/Plugin';\nimport {\n\tbroadcastDirectorPause,\n\tbroadcastDirectorPlay\n} from './services/radioService/broadcasters';\nimport { StoryEvent, StoryType } from './types/StoryType';\nimport { reporterService, scriptedEventService } from './services';\nimport { VERSION } from './version';\nimport { inject, injectable, singleton } from 'tsyringe';\n\nclass LoomseError extends Error {}\n\n@injectable()\n@singleton()\nexport default class Loomse {\n\tpublic el: HTMLElement;\n\tpublic version = VERSION;\n\tpublic scene: Scene | null = null;\n\n\tprivate story: StoryType | null = null;\n\n\tconstructor(\n\t\t@inject('root') root: HTMLElement,\n\t\t@inject('json') json: object\n\t) {\n\t\tthis.el = el('div.loomse__root');\n\n\t\tmount(root, this.el);\n\n\t\ttry {\n\t\t\tthis.setStory(json as StoryType);\n\t\t\tthis.loadScene((json as StoryType).firstScene);\n\t\t} catch (error) {\n\t\t\tthrow new LoomseError(`Unable to load story object, ${error}`);\n\t\t}\n\t}\n\n\tprivate setStory(storyObject: StoryType) {\n\t\tthis.story = new Story(storyObject);\n\t}\n\n\tprivate loadScene(sceneName: string) {\n\t\tif (!this.story) return;\n\n\t\tif (!sceneName || !this.story.scenes[sceneName]) {\n\t\t\tthrow new LoomseError(\n\t\t\t\t`Scene \"${sceneName}\" does not exist in script`\n\t\t\t);\n\t\t}\n\n\t\tif (this.scene) {\n\t\t\tunmount(this.el, this.scene);\n\t\t}\n\n\t\tthis.scene = new Scene(sceneName, this.story.scenes[sceneName]);\n\n\t\tmount(this.el, this.scene);\n\t}\n\n\tcurrentDuration(): number {\n\t\treturn reporterService.getCurrentDuration();\n\t}\n\n\tcurrentTime(): number {\n\t\treturn reporterService.getCurrentTime();\n\t}\n\n\tcurrentScene(): string {\n\t\treturn reporterService.getCurrentScene();\n\t}\n\n\tcurrentEvents(): StoryEvent[] {\n\t\treturn scriptedEventService.events;\n\t}\n\n\tpause() {\n\t\tbroadcastDirectorPause();\n\t}\n\n\tplay() {\n\t\tbroadcastDirectorPlay();\n\t}\n\n\tregisterPlugin(pluginProps: PluginProps): void {\n\t\tPlugin.registerPlugin(pluginProps);\n\t}\n\n\treloadScene() {\n\t\tif (this.scene?.sceneName) {\n\t\t\tthis.loadScene(this.scene?.sceneName);\n\t\t}\n\t}\n\n\tskipTo(sceneName: string) {\n\t\tthis.loadScene(sceneName);\n\t}\n}\n","import { StoryType, StoryScenes } from '../../types/StoryType';\n\nexport default class Story implements StoryType {\n\tpublic firstScene: string;\n\tpublic scenes: StoryScenes;\n\tpublic author?: string;\n\tpublic shortName?: string;\n\tpublic longName?: string;\n\tpublic description?: string;\n\tpublic language?: string;\n\n\tconstructor({\n\t\tfirstScene,\n\t\tscenes,\n\t\tauthor,\n\t\tshortName,\n\t\tlongName,\n\t\tdescription,\n\t\tlanguage\n\t}: Story) {\n\t\tthis.firstScene = firstScene;\n\t\tthis.scenes = scenes;\n\t\tthis.shortName = shortName;\n\t\tthis.longName = longName;\n\t\tthis.author = author;\n\t\tthis.description = description;\n\t\tthis.language = language;\n\t}\n}\n","import { el, unmount } from 'redom';\n\nimport Video from '../Video';\n\nimport { broadcastDirectorSceneChange } from '../../services/radioService/broadcasters';\nimport { scriptedEventService } from '../../services';\nimport { StoryScene } from '../../types/StoryType';\n\nexport default class Scene {\n\tpublic el: HTMLElement;\n\tpublic sceneName: string;\n\tpublic video: Video;\n\tpublic longName: string | undefined;\n\n\tconstructor(sceneName: string, { events, longName, video }: StoryScene) {\n\t\tbroadcastDirectorSceneChange(sceneName);\n\n\t\tthis.el = el('div.loomse__scene', (this.video = new Video(video)));\n\n\t\tthis.sceneName = sceneName;\n\t\tthis.longName = longName;\n\n\t\tscriptedEventService.setEvents(events);\n\n\t\tthis.video.play();\n\t}\n\n\tonunmount() {\n\t\tscriptedEventService.stopListeningToRadio();\n\t\tunmount(this.el, this.video.el);\n\t}\n}\n","import { el, mount, unmount } from 'redom';\n\nimport { StopListeningFunction } from '../../services/radioService/listeners';\n\nimport {\n\tbroadcastVideoDurationChanged,\n\tbroadcastVideoEnded,\n\tbroadcastVideoPaused,\n\tbroadcastVideoPlaying,\n\tbroadcastVideoSeeked,\n\tbroadcastVideoSeeking,\n\tbroadcastVideoTimeUpdate\n} from '../../services/radioService/broadcasters';\nimport {\n\tlistenToDirectorPause,\n\tlistenToDirectorPlay\n} from '../../services/radioService/listeners';\nimport Source from './Source';\nimport Subtitles from '../Subtitles';\n\nclass VideoError extends Error {}\n\ninterface VideoProps {\n\tcontrols?: boolean;\n\tloop?: { in: number; out: number } | boolean;\n\tmuted?: boolean;\n\tsources: { [key: string]: string };\n\tsubtitles?: string;\n}\n\nexport default class Video {\n\tpublic el: HTMLVideoElement;\n\tpublic broadcastEndedEvent: () => void;\n\tpublic broadcastDurationChangeEvent: () => void;\n\tpublic broadcastPlayingEvent: () => void;\n\tpublic broadcastPausedEvent: () => void;\n\tpublic broadcastSeekedEvent: () => void;\n\tpublic broadcastSeekingEvent: () => void;\n\tpublic broadcastTimeUpdateEvent: () => void;\n\tpublic stopListeningToVideoPause: StopListeningFunction;\n\tpublic stopListeningToVideoPlay: StopListeningFunction;\n\tpublic sources: { [key: string]: Source };\n\n\tconstructor({\n\t\tcontrols = false,\n\t\tloop = false,\n\t\tmuted = false,\n\t\tsources,\n\t\tsubtitles\n\t}: VideoProps) {\n\t\tthis.el = el('video', {\n\t\t\tautoplay: false,\n\t\t\tcontrols: controls,\n\t\t\tloop: loop,\n\t\t\tmuted: muted\n\t\t});\n\t\tthis.el.className = 'loomse__video';\n\n\t\tthis.sources = this.setSources(sources);\n\t\tthis.mountSources();\n\n\t\tif (subtitles) {\n\t\t\tnew Subtitles(subtitles);\n\t\t}\n\n\t\tthis.broadcastEndedEvent = () => broadcastVideoEnded();\n\n\t\tthis.broadcastDurationChangeEvent = () =>\n\t\t\tbroadcastVideoDurationChanged(this.el.duration);\n\n\t\tthis.broadcastPlayingEvent = () =>\n\t\t\tbroadcastVideoPlaying(this.el.currentTime);\n\n\t\tthis.broadcastPausedEvent = () => broadcastVideoPaused();\n\n\t\tthis.broadcastSeekedEvent = () =>\n\t\t\tbroadcastVideoSeeked(this.el.currentTime);\n\n\t\tthis.broadcastSeekingEvent = () =>\n\t\t\tbroadcastVideoSeeking(this.el.currentTime);\n\n\t\tthis.broadcastTimeUpdateEvent = () =>\n\t\t\tbroadcastVideoTimeUpdate(this.el.currentTime);\n\n\t\tthis.stopListeningToVideoPause = listenToDirectorPause(() =>\n\t\t\tthis.pause()\n\t\t);\n\n\t\tthis.stopListeningToVideoPlay = listenToDirectorPlay(() => this.play());\n\n\t\tthis.listenToVideoEvents();\n\t}\n\n\tonunmount() {\n\t\tthis.stopListeningToVideoEvents();\n\t\tthis.stopListeningToRadio();\n\t\tthis.unmountSources();\n\t}\n\n\tsetSources(sources: { [key: string]: string }) {\n\t\tif (!sources) {\n\t\t\tthrow new VideoError('No video sources found');\n\t\t}\n\n\t\tconst generatedSources: { [key: string]: Source } = {};\n\n\t\tfor (const key in sources) {\n\t\t\tif (!sources.hasOwnProperty(key)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tgeneratedSources[key] = new Source(key, sources[key]);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.warn(`${error}, skipping...`);\n\t\t\t}\n\t\t}\n\n\t\treturn generatedSources;\n\t}\n\n\tmanageSources(callback: (source: Source) => void) {\n\t\tfor (const key in this.sources) {\n\t\t\tif (!this.sources.hasOwnProperty(key)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst source = this.sources[key];\n\n\t\t\tcallback(source);\n\t\t}\n\t}\n\n\tmountSources() {\n\t\tthis.manageSources((source) => mount(this.el, source.el));\n\t}\n\n\tunmountSources() {\n\t\tthis.manageSources((source) => unmount(this.el, source.el));\n\t}\n\n\tlistenToVideoEvents() {\n\t\tthis.el.addEventListener('ended', this.broadcastEndedEvent);\n\t\tthis.el.addEventListener(\n\t\t\t'durationchange',\n\t\t\tthis.broadcastDurationChangeEvent\n\t\t);\n\t\tthis.el.addEventListener('paused', this.broadcastPausedEvent);\n\t\tthis.el.addEventListener('playing', this.broadcastPlayingEvent);\n\t\tthis.el.addEventListener('seeked', this.broadcastSeekedEvent);\n\t\tthis.el.addEventListener('seeking', this.broadcastSeekingEvent);\n\t\tthis.el.addEventListener('timeupdate', this.broadcastTimeUpdateEvent);\n\t}\n\n\tstopListeningToVideoEvents() {\n\t\tthis.el.removeEventListener('ended', this.broadcastEndedEvent);\n\t\tthis.el.removeEventListener(\n\t\t\t'durationchange',\n\t\t\tthis.broadcastDurationChangeEvent\n\t\t);\n\t\tthis.el.removeEventListener('paused', this.broadcastPausedEvent);\n\t\tthis.el.removeEventListener('playing', this.broadcastPlayingEvent);\n\t\tthis.el.removeEventListener('seeked', this.broadcastSeekedEvent);\n\t\tthis.el.removeEventListener('seeking', this.broadcastSeekingEvent);\n\t\tthis.el.removeEventListener(\n\t\t\t'timeupdate',\n\t\t\tthis.broadcastTimeUpdateEvent\n\t\t);\n\t}\n\n\tstopListeningToRadio() {\n\t\tthis.stopListeningToVideoPause();\n\t\tthis.stopListeningToVideoPlay();\n\t}\n\n\tplay() {\n\t\tthis.el.play().catch((error) => {\n\t\t\tconsole.warn(error);\n\t\t});\n\t}\n\n\tpause() {\n\t\tthis.el.pause();\n\t}\n\n\tplayPause() {\n\t\tif (this.el.paused) {\n\t\t\tthis.play();\n\t\t} else {\n\t\t\tthis.pause();\n\t\t}\n\t}\n}\n","import { radio } from './radio';\n\nimport { RadioChannel } from './channelTypes';\nimport { EventAction } from '../eventService/EventQueue';\n\nexport const broadcastDirectorPause = () =>\n\tradio.broadcastOnChannel(RadioChannel.DIRECTOR_PAUSE);\n\nexport const broadcastDirectorPlay = () =>\n\tradio.broadcastOnChannel(RadioChannel.DIRECTOR_PLAY);\n\nexport const broadcastDirectorSceneChange = (sceneId: string) =>\n\tradio.broadcastOnChannel(RadioChannel.DIRECTOR_SCENE_CHANGE, sceneId);\n\nexport const broadcastDirectorSceneEvent = (signal: {\n\taction: EventAction;\n\tpayload: any;\n}) =>\n\tradio.broadcastOnChannel(RadioChannel.DIRECTOR_SCENE_EVENT, {\n\t\taction: signal.action,\n\t\tmessage: signal.payload\n\t});\n\nexport const broadcastVideoEnded = () =>\n\tradio.broadcastOnChannel(RadioChannel.VIDEO_ENDED);\n\nexport const broadcastVideoDurationChanged = (duration: number) =>\n\tradio.broadcastOnChannel(RadioChannel.VIDEO_DURATION_CHANGED, duration);\n\nexport const broadcastVideoPaused = () =>\n\tradio.broadcastOnChannel(RadioChannel.VIDEO_PAUSED);\n\nexport const broadcastVideoPlaying = (currentTime: number) =>\n\tradio.broadcastOnChannel(RadioChannel.VIDEO_PLAYING, currentTime);\n\nexport const broadcastVideoSeeked = (currentTime: number) =>\n\tradio.broadcastOnChannel(RadioChannel.VIDEO_SEEKED, currentTime);\n\nexport const broadcastVideoSeeking = (currentTime: number) =>\n\tradio.broadcastOnChannel(RadioChannel.VIDEO_SEEKING, currentTime);\n\nexport const broadcastVideoTimeUpdate = (currentTime: number) =>\n\tradio.broadcastOnChannel(RadioChannel.VIDEO_TIMEUPDATE, currentTime);\n\nexport const broadcastSubtitlePost = (subtitle: string) =>\n\tradio.broadcastOnChannel(RadioChannel.SUBTITLE_POST, subtitle);\n\nexport const broadcastSubtitleClear = () =>\n\tradio.broadcastOnChannel(RadioChannel.SUBTITLE_CLEAR);\n","import { el } from 'redom';\n\nimport {\n\tVideoFileExtension,\n\tVideoMIME_Type\n} from '../../types/VideoSourceTypes';\n\nclass SourceError extends Error {}\n\nexport default class Source {\n\tpublic el: HTMLSourceElement;\n\n\tstatic canPlayMimeType(videoMIME_Type: VideoMIME_Type): boolean {\n\t\tconst videoElement = document.createElement('video');\n\n\t\treturn Boolean(videoElement.canPlayType(videoMIME_Type));\n\t}\n\n\tstatic mapFileExtensionToMIME_Type(fileExtension: string) {\n\t\tswitch (fileExtension) {\n\t\t\tcase VideoFileExtension.MP4:\n\t\t\t\treturn VideoMIME_Type.MP4;\n\t\t\tcase VideoFileExtension.OGG:\n\t\t\t\treturn VideoMIME_Type.OGG;\n\t\t\tcase VideoFileExtension.WEBM:\n\t\t\t\treturn VideoMIME_Type.WEBM;\n\t\t\tdefault:\n\t\t\t\tthrow new SourceError('Unable to process source in Video file');\n\t\t}\n\t}\n\n\tconstructor(fileExtension: string, uri: string) {\n\t\tconst videoMIME_Type =\n\t\t\tSource.mapFileExtensionToMIME_Type(fileExtension);\n\n\t\tif (!Source.canPlayMimeType(videoMIME_Type)) {\n\t\t\tthrow new SourceError(\n\t\t\t\t`Video format ${videoMIME_Type} not supported by browser`\n\t\t\t);\n\t\t}\n\n\t\tthis.el = el('source', {\n\t\t\tsrc: uri,\n\t\t\ttype: videoMIME_Type\n\t\t});\n\t}\n}\n","export enum VideoFileExtension {\n\tMP4 = 'mp4',\n\tOGG = 'ogg',\n\tWEBM = 'webm'\n}\n\nexport enum VideoMIME_Type {\n\tMP4 = 'video/mp4',\n\tOGG = 'video/ogg',\n\tWEBM = 'video/webm'\n}\n","import {\n\tCue,\n\textractFormatFromFileName,\n\tFormat,\n\tparser\n} from 'simple-subtitle-parser';\n\nimport { getTextFile } from '../../lib/browser/fetch';\nimport { StoryEvent } from '../../types/StoryType';\nimport { subtitleEventService } from '../../services';\n\nclass SubtitlesError extends Error {}\n\nexport default class Subtitles {\n\tpublic cues: Cue[] | null = null;\n\tpublic filePath: string;\n\tpublic fileContents: string | null = null;\n\tpublic format: Format;\n\n\tstatic mapCueToScriptedEvent(cue: Cue[]): StoryEvent[] {\n\t\treturn cue.map((cue) => ({\n\t\t\tin: cue.startTime,\n\t\t\tout: cue.endTime,\n\t\t\tpayload: cue.text\n\t\t}));\n\t}\n\n\tconstructor(filePath: string) {\n\t\tthis.filePath = filePath;\n\t\tthis.format = extractFormatFromFileName(filePath).format;\n\n\t\tthis.parseTextFile(filePath).catch((error) => {\n\t\t\tthrow new SubtitlesError(\n\t\t\t\t`Unable to parse subtitles file, ${error.message}`\n\t\t\t);\n\t\t});\n\t}\n\n\tasync parseTextFile(filePath: string) {\n\t\tthis.fileContents = await getTextFile(filePath);\n\t\tthis.cues = await parser(this.format, this.fileContents);\n\n\t\tsubtitleEventService.setEvents(\n\t\t\tSubtitles.mapCueToScriptedEvent(this.cues)\n\t\t);\n\t}\n}\n","export async function getTextFile(filePath: string) {\n\tconst response = await fetch(filePath);\n\n\treturn response.text();\n}\n","import { container } from 'tsyringe';\n\nimport PluginRegistryService from './pluginRegistryService';\nimport ReporterService from './reporterService';\nimport ScriptedEventService from './scriptedEventService';\nimport SubtitleEventService from './subtitleEventService';\n\nexport const pluginRegistryService = new PluginRegistryService();\nexport const reporterService = container.resolve(ReporterService);\nexport const scriptedEventService = container.resolve(ScriptedEventService);\nexport const subtitleEventService = container.resolve(SubtitleEventService);\n","import Plugin from '../../components/Plugin';\n\ntype PluginName = string;\n\nclass PluginRegistryServiceError extends Error {}\n\nexport default class PluginRegistryService {\n\tprivate readonly registry: {\n\t\t[key: PluginName]: Plugin;\n\t} = {};\n\n\tregisterPlugin(plugin: Plugin) {\n\t\tif (this.registry[plugin.name])\n\t\t\tthrow new PluginRegistryServiceError(\n\t\t\t\t`Unable to register plugin: A plugin with the name \"${plugin.name}\" has already been registered`\n\t\t\t);\n\n\t\tthis.registry[plugin.name] = plugin;\n\t}\n\n\tgetPlugin(name: string): Plugin | undefined {\n\t\tif (!this.registry[name]) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.registry[name];\n\t}\n}\n","import { injectable, singleton } from 'tsyringe';\n\nimport SceneReporter from './SceneReporter';\nimport VideoReporter from './VideoReporter';\n\n@injectable()\n@singleton()\nexport default class ReporterService {\n\tconstructor(\n\t\tprivate sceneReporter: SceneReporter,\n\t\tprivate videoReporter: VideoReporter\n\t) {}\n\n\tgetCurrentTime(): number {\n\t\treturn this.videoReporter.currentTime;\n\t}\n\n\tgetCurrentDuration(): number {\n\t\treturn this.videoReporter.currentDuration;\n\t}\n\n\tgetCurrentScene(): string {\n\t\treturn this.sceneReporter.currentScene;\n\t}\n}\n","import { listenToDirectorSceneChange } from '../../radioService/listeners';\n\n/**\n * Listens to and keeps track of scene events\n */\nexport default class SceneReporter {\n\tpublic currentScene: string;\n\n\tconstructor() {\n\t\tthis.currentScene = '';\n\n\t\tthis.registerListeners();\n\t}\n\n\tregisterListeners() {\n\t\tlistenToDirectorSceneChange((sceneId) => {\n\t\t\tthis.currentScene = sceneId;\n\t\t});\n\t}\n}\n","import {\n\tlistenToVideoDurationChanged,\n\tlistenToVideoTimeUpdate\n} from '../../radioService/listeners';\n\n/**\n * Listens to and keeps track of video events\n */\nexport default class VideoReporter {\n\tpublic currentDuration = 0;\n\tpublic currentTime = 0;\n\n\tconstructor() {\n\t\tthis.registerListeners();\n\t}\n\n\tregisterListeners() {\n\t\tlistenToVideoDurationChanged((duration) => {\n\t\t\tthis.currentDuration = duration;\n\t\t});\n\n\t\tlistenToVideoTimeUpdate((time) => {\n\t\t\tthis.currentTime = time;\n\t\t});\n\t}\n}\n","import { container, singleton } from 'tsyringe';\n\nimport { StoryEvent } from '../../types/StoryType';\nimport EventQueue, { EventAction } from '../eventService/EventQueue';\nimport EventService from '../eventService';\nimport { broadcastDirectorSceneEvent } from '../radioService/broadcasters';\nimport { pluginRegistryService } from '../';\n\n@singleton()\nexport default class ScriptedEventService extends EventService {\n\tconstructor() {\n\t\tsuper(container.resolve(EventQueue));\n\t}\n\n\tpublic setEvents(events: StoryEvent[]) {\n\t\tsuper.setEvents(events);\n\t}\n\n\tprotected startEventCallback({ pluginName, payload }: StoryEvent) {\n\t\tif (pluginName) {\n\t\t\tconst plugin = pluginRegistryService.getPlugin(pluginName);\n\n\t\t\tif (!plugin) {\n\t\t\t\tconsole.warn(`Plugin \"${pluginName}\" not registered`);\n\t\t\t}\n\n\t\t\tif (plugin?.hooks?.run) {\n\t\t\t\tplugin.hooks.run(payload);\n\t\t\t}\n\t\t}\n\n\t\tbroadcastDirectorSceneEvent({\n\t\t\taction: EventAction.START,\n\t\t\tpayload\n\t\t});\n\t}\n\n\tprotected stopEventCallback({ pluginName, payload }: StoryEvent) {\n\t\tif (pluginName) {\n\t\t\tconst plugin = pluginRegistryService.getPlugin(pluginName);\n\n\t\t\tif (plugin && !plugin.mount?.persist) {\n\t\t\t\tplugin?.unmount();\n\t\t\t}\n\t\t}\n\n\t\tbroadcastDirectorSceneEvent({\n\t\t\taction: EventAction.STOP,\n\t\t\tpayload\n\t\t});\n\t}\n}\n","import { StoryEvent } from '../../../types/StoryType';\n\nexport interface TimedObject {\n\tid: number;\n\ttime: number;\n\taction: EventAction;\n}\n\nexport enum EventAction {\n\tSTART = 'start',\n\tSTOP = 'stop'\n}\n\nexport default class EventQueue {\n\tprivate queueIndex = 0;\n\tprivate queue: TimedObject[] = [];\n\n\tstatic buildQueueFromScriptedEvents(events: StoryEvent[]): TimedObject[] {\n\t\tconst queue: TimedObject[] = [];\n\n\t\tfor (let i = 0; i < events.length; i += 1) {\n\t\t\tconst timedObjectIn = {\n\t\t\t\tid: i,\n\t\t\t\ttime: events[i].in,\n\t\t\t\taction: EventAction.START\n\t\t\t};\n\n\t\t\tconst timedObjectOut = {\n\t\t\t\tid: i,\n\t\t\t\ttime: events[i].out,\n\t\t\t\taction: EventAction.STOP\n\t\t\t};\n\n\t\t\tqueue.push(timedObjectIn, timedObjectOut);\n\t\t}\n\n\t\treturn queue;\n\t}\n\n\tsetQueue(timedObjects: TimedObject[]) {\n\t\tthis.queueIndex = 0;\n\t\tthis.queue = timedObjects;\n\t\tthis.sort('asc');\n\t}\n\n\tgetQueue(): TimedObject[] {\n\t\treturn this.queue;\n\t}\n\n\tgetCurrentTimedEventId() {\n\t\treturn this.queue[this.queueIndex].id;\n\t}\n\n\tgetPendingObject(): TimedObject | undefined {\n\t\tif (this.queueIndex > this.queue.length - 1) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.queue[this.queueIndex];\n\t}\n\n\tadvanceQueue() {\n\t\tthis.queueIndex += 1;\n\t}\n\n\tsort(type: 'desc' | 'asc') {\n\t\tswitch (type) {\n\t\t\tcase 'desc':\n\t\t\t\tthis.queue.sort((a, b) => b.time - a.time);\n\t\t\t\tbreak;\n\n\t\t\tcase 'asc':\n\t\t\tdefault:\n\t\t\t\tthis.queue.sort((a, b) => a.time - b.time);\n\t\t}\n\t}\n}\n","import { StoryEvent } from '../../types/StoryType';\nimport {\n\tlistenToVideoTimeUpdate,\n\tStopListeningFunction\n} from '../radioService/listeners';\nimport EventQueue, { TimedObject, EventAction } from './EventQueue';\n\nclass EventServiceError extends Error {}\n\nexport default abstract class EventService {\n\tpublic stopListeningToRadio: StopListeningFunction = () => {};\n\tpublic events: StoryEvent[] = [];\n\n\tprotected constructor(private queue: EventQueue) {}\n\n\tprotected setEvents(events: StoryEvent[]) {\n\t\tthis.events = events;\n\t\tthis.queue.setQueue(EventQueue.buildQueueFromScriptedEvents(events));\n\t\tthis.stopListeningToRadio = listenToVideoTimeUpdate((time) =>\n\t\t\tthis.isReadyToAction(time)\n\t\t);\n\t}\n\n\tprotected abstract startEventCallback(scriptedEvent: StoryEvent): void;\n\n\tprotected abstract stopEventCallback(scriptedEvent: StoryEvent): void;\n\n\tprivate isReadyToAction(time: number) {\n\t\tif (!time) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst milliseconds = time;\n\t\tconst pending = this.queue.getPendingObject();\n\n\t\tif (!milliseconds || !pending) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (milliseconds >= pending.time) {\n\t\t\tthis.parseAction(pending);\n\t\t}\n\t}\n\n\tprivate parseAction(event: TimedObject) {\n\t\tconst eventId = this.queue.getCurrentTimedEventId();\n\t\tconst eventData = this.events[eventId];\n\n\t\tif (!eventData) {\n\t\t\tthrow new EventServiceError('Event data not found');\n\t\t}\n\n\t\tswitch (event.action) {\n\t\t\tcase EventAction.START:\n\t\t\t\tthis.startEventCallback(eventData);\n\n\t\t\t\tbreak;\n\t\t\tcase EventAction.STOP:\n\t\t\t\tthis.stopEventCallback(eventData);\n\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\n\t\tthis.queue.advanceQueue();\n\t}\n}\n","import { container, singleton } from 'tsyringe';\n\nimport { StoryEvent } from '../../types/StoryType';\nimport {\n\tbroadcastSubtitleClear,\n\tbroadcastSubtitlePost\n} from '../radioService/broadcasters';\nimport EventService from '../eventService';\nimport EventQueue from '../eventService/EventQueue';\n\n@singleton()\nexport default class SubtitleEventService extends EventService {\n\tconstructor() {\n\t\tsuper(container.resolve(EventQueue));\n\t}\n\n\tpublic setEvents(events: StoryEvent[]) {\n\t\tsuper.setEvents(events);\n\t}\n\n\tprotected startEventCallback({ payload }: StoryEvent) {\n\t\tbroadcastSubtitlePost(payload);\n\t}\n\n\tprotected stopEventCallback() {\n\t\tbroadcastSubtitleClear();\n\t}\n}\n","import { mount as redomMount, unmount } from 'redom';\n\nimport { pluginRegistryService } from '../../services';\n\nexport interface PluginProps {\n\tname: string;\n\tmount?: {\n\t\tparentEl: HTMLElement;\n\t\tel: HTMLElement;\n\t\tonLoad?: boolean;\n\t\tpersist?: boolean;\n\t};\n\thooks?: {\n\t\trun?: (payload?: object) => void;\n\t\tcleanup?: () => void;\n\t};\n}\n\nclass PluginError extends Error {}\n\nexport default class Plugin {\n\tpublic readonly name: string;\n\tpublic readonly mount?: {\n\t\tonLoad?: boolean;\n\t\tpersist?: boolean;\n\t\tparentEl: HTMLElement;\n\t\tel: HTMLElement;\n\t};\n\tpublic readonly hooks?: {\n\t\trun?: (payload?: object) => void;\n\t\tcleanup?: () => void;\n\t};\n\n\tstatic registerPlugin(pluginProps: PluginProps) {\n\t\tconst plugin = new Plugin(pluginProps);\n\t\tpluginRegistryService.registerPlugin(plugin);\n\n\t\tconsole.log(`Loomse: Plugin \"${pluginProps.name}\" registered`);\n\n\t\treturn;\n\t}\n\n\tconstructor({ name, hooks, mount }: PluginProps) {\n\t\tthis.name = name;\n\t\tthis.hooks = {\n\t\t\trun: hooks?.run,\n\t\t\tcleanup: hooks?.cleanup\n\t\t};\n\n\t\tif (mount) {\n\t\t\tif (!mount.el || !mount.parentEl) {\n\t\t\t\tthrow new PluginError(\n\t\t\t\t\t'Unable to register plugin, no suitable mount point'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.mount = mount;\n\n\t\t\tif (mount.onLoad) {\n\t\t\t\tredomMount(this.mount.parentEl, this.mount.el);\n\t\t\t}\n\t\t}\n\t}\n\n\tunmount() {\n\t\tif (this.hooks?.cleanup) {\n\t\t\tthis.hooks.cleanup();\n\t\t}\n\n\t\tif (this.mount) {\n\t\t\tunmount(this.mount.parentEl, this.mount.el);\n\t\t}\n\t}\n}\n","export const VERSION = \"1.0.0\";\n"],"mappings":"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","names":["container","random","minRange","maxRange","range","Math","floor","Radio","registry","tokenGenerator","length","token","i","randomNumber","random","push","String","fromCharCode","join","broadcastOnChannel","channel","signal","console","warn","Object","values","forEach","listener","listenToChannel","handler","listenerToken","stopListening","keys","filter","tokens","includes","radio","RadioChannel","DIRECTOR_PLAY","DIRECTOR_PAUSE","DIRECTOR_SCENE_CHANGE","DIRECTOR_SCENE_EVENT","VIDEO_ENDED","VIDEO_DURATION_CHANGED","VIDEO_PAUSED","VIDEO_PLAYING","VIDEO_SEEKED","VIDEO_SEEKING","VIDEO_TIMEUPDATE","SUBTITLE_POST","SUBTITLE_CLEAR","listenToDirectorPause","handler","radio","listenToChannel","RadioChannel","DIRECTOR_PAUSE","listenToDirectorPlay","DIRECTOR_PLAY","listenToDirectorSceneChange","DIRECTOR_SCENE_CHANGE","listenToDirectorSceneEvent","DIRECTOR_SCENE_EVENT","listenToVideoDurationChanged","VIDEO_DURATION_CHANGED","listenToVideoTimeUpdate","VIDEO_TIMEUPDATE","el","mount","unmount","Story","constructor","firstScene","scenes","author","shortName","longName","description","language","el","unmount","el","mount","unmount","broadcastDirectorPause","radio","broadcastOnChannel","RadioChannel","DIRECTOR_PAUSE","broadcastDirectorPlay","DIRECTOR_PLAY","broadcastDirectorSceneChange","sceneId","DIRECTOR_SCENE_CHANGE","broadcastDirectorSceneEvent","signal","DIRECTOR_SCENE_EVENT","action","message","payload","broadcastVideoEnded","VIDEO_ENDED","broadcastVideoDurationChanged","duration","VIDEO_DURATION_CHANGED","broadcastVideoPaused","VIDEO_PAUSED","broadcastVideoPlaying","currentTime","VIDEO_PLAYING","broadcastVideoSeeked","VIDEO_SEEKED","broadcastVideoSeeking","VIDEO_SEEKING","broadcastVideoTimeUpdate","VIDEO_TIMEUPDATE","broadcastSubtitlePost","subtitle","SUBTITLE_POST","broadcastSubtitleClear","SUBTITLE_CLEAR","el","VideoFileExtension","MP4","OGG","WEBM","VideoMIME_Type","SourceError","Error","Source","constructor","fileExtension","uri","el","videoMIME_Type","mapFileExtensionToMIME_Type","canPlayMimeType","src","type","videoElement","document","createElement","Boolean","canPlayType","VideoFileExtension","MP4","VideoMIME_Type","OGG","WEBM","extractFormatFromFileName","parser","getTextFile","filePath","response","fetch","text","container","_a","PluginRegistryServiceError","Error","PluginRegistryService","registry","registerPlugin","plugin","name","getPlugin","injectable","singleton","SceneReporter","constructor","currentScene","registerListeners","listenToDirectorSceneChange","sceneId","VideoReporter","constructor","currentDuration","currentTime","registerListeners","listenToVideoDurationChanged","duration","listenToVideoTimeUpdate","time","ReporterService","_a","constructor","sceneReporter","videoReporter","getCurrentTime","currentTime","getCurrentDuration","currentDuration","getCurrentScene","currentScene","injectable","singleton","container","singleton","EventAction","START","STOP","EventQueue","queueIndex","queue","buildQueueFromScriptedEvents","events","i","length","timedObjectIn","id","time","in","action","timedObjectOut","out","push","setQueue","timedObjects","sort","getQueue","getCurrentTimedEventId","getPendingObject","advanceQueue","type","a","b","_a","EventServiceError","Error","EventService","queue","stopListeningToRadio","events","setEvents","setQueue","EventQueue","buildQueueFromScriptedEvents","listenToVideoTimeUpdate","time","isReadyToAction","milliseconds","pending","getPendingObject","parseAction","event","eventId","getCurrentTimedEventId","eventData","action","EventAction","START","startEventCallback","STOP","stopEventCallback","advanceQueue","ScriptedEventService","_a","EventService","constructor","container","resolve","EventQueue","setEvents","events","startEventCallback","pluginName","payload","plugin","pluginRegistryService","getPlugin","console","warn","hooks","run","broadcastDirectorSceneEvent","action","EventAction","START","stopEventCallback","mount","persist","unmount","STOP","singleton","container","singleton","SubtitleEventService","_a","EventService","constructor","container","resolve","EventQueue","setEvents","events","startEventCallback","payload","broadcastSubtitlePost","stopEventCallback","broadcastSubtitleClear","singleton","pluginRegistryService","PluginRegistryService","reporterService","container","resolve","ReporterService","scriptedEventService","ScriptedEventService","subtitleEventService","SubtitleEventService","_a","SubtitlesError","Error","Subtitles","constructor","filePath","cues","fileContents","format","extractFormatFromFileName","parseTextFile","catch","error","message","mapCueToScriptedEvent","cue","map","in","startTime","out","endTime","payload","text","getTextFile","parser","subtitleEventService","setEvents","_a","VideoError","Error","Video","constructor","controls","loop","muted","sources","subtitles","el","broadcastEndedEvent","broadcastDurationChangeEvent","broadcastPlayingEvent","broadcastPausedEvent","broadcastSeekedEvent","broadcastSeekingEvent","broadcastTimeUpdateEvent","stopListeningToVideoPause","stopListeningToVideoPlay","autoplay","className","setSources","mountSources","Subtitles","broadcastVideoEnded","broadcastVideoDurationChanged","duration","broadcastVideoPlaying","currentTime","broadcastVideoPaused","broadcastVideoSeeked","broadcastVideoSeeking","broadcastVideoTimeUpdate","listenToDirectorPause","pause","listenToDirectorPlay","play","listenToVideoEvents","onunmount","stopListeningToVideoEvents","stopListeningToRadio","unmountSources","generatedSources","key","hasOwnProperty","Source","error","console","warn","manageSources","callback","source","mount","unmount","addEventListener","removeEventListener","catch","playPause","paused","Scene","constructor","sceneName","events","longName","video","el","broadcastDirectorSceneChange","Video","scriptedEventService","setEvents","play","onunmount","stopListeningToRadio","unmount","mount","redomMount","unmount","_a","PluginError","Error","Plugin","constructor","name","hooks","mount","run","cleanup","el","parentEl","onLoad","redomMount","registerPlugin","pluginProps","plugin","pluginRegistryService","console","log","unmount","VERSION","inject","injectable","singleton","LoomseError","_a","Error","Loomse","constructor","root","json","el","version","VERSION","scene","story","mount","setStory","loadScene","firstScene","error","storyObject","Story","sceneName","scenes","unmount","Scene","currentDuration","reporterService","getCurrentDuration","currentTime","getCurrentTime","currentScene","getCurrentScene","currentEvents","scriptedEventService","events","pause","broadcastDirectorPause","play","broadcastDirectorPlay","registerPlugin","pluginProps","Plugin","reloadScene","skipTo","injectable","singleton","inject","createStory","root","json","container","register","useValue","resolve","Loomse"]}